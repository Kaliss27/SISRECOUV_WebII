[{"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\index.js":"1","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\App.js":"2","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Main.js":"3","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Header.js":"4","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroVisita.js":"5","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroDR.js":"6","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\LoginReco.js":"7","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroDE.js":"8","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Eventos.js":"9","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\InicioReco.js":"10","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Carousel.js":"11","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Inventario.js":"12","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Actividades.js":"13","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\editInventario.js":"14"},{"size":264,"mtime":1611527234276,"results":"15","hashOfConfig":"16"},{"size":247,"mtime":1611734048628,"results":"17","hashOfConfig":"16"},{"size":1205,"mtime":1611768032690,"results":"18","hashOfConfig":"16"},{"size":2069,"mtime":1611766854966,"results":"19","hashOfConfig":"16"},{"size":8813,"mtime":1611223752889,"results":"20","hashOfConfig":"16"},{"size":16411,"mtime":1611480726956,"results":"21","hashOfConfig":"16"},{"size":3582,"mtime":1611765978821,"results":"22","hashOfConfig":"16"},{"size":19162,"mtime":1611704991838,"results":"23","hashOfConfig":"16"},{"size":3698,"mtime":1611549542338,"results":"24","hashOfConfig":"16"},{"size":646,"mtime":1611549542349,"results":"25","hashOfConfig":"16"},{"size":1763,"mtime":1611297419411,"results":"26","hashOfConfig":"16"},{"size":17227,"mtime":1611766507537,"results":"27","hashOfConfig":"16"},{"size":6874,"mtime":1611766786023,"results":"28","hashOfConfig":"16"},{"size":8453,"mtime":1611769768505,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8svgm5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\index.js",[],["65","66"],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\App.js",["67"],"import React from \"react\";\r\nimport Main from \"./Main\";\r\nimport Header from \"./Header\";\r\n\r\n\r\n\r\nconst App = () => (\r\n    localStorage.setItem('ACCESS_TOKEN',''),\r\n    \r\n    <>\r\n        <Header />\r\n        <Main />\r\n    </>\r\n);\r\n\r\nexport default App;","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Main.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Header.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroVisita.js",["68","69","70"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport Carousel from '../components/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\n\r\nclass RegistroVisitas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visits: [],\r\n            isFetched: false,\r\n            error: null,\r\n            deps: [],\r\n            Matricula: '',\r\n            Nombre: '',\r\n            Apaterno: '',\r\n            Amaterno: '',\r\n            PeDependencia: '',\r\n            TipoVisita: '',\r\n            FechaHora: ''\r\n        };\r\n    }\r\n\r\n\r\n    AddVisita = () => {\r\n        const data = {\r\n            \"matricula\": this.state.Matricula,\r\n            \"nombre\": this.state.Nombre,\r\n            \"apaterno\": this.state.Apaterno,\r\n            \"amaterno\": this.state.Amaterno,\r\n            \"pedependencia\": parseInt(this.state.PeDependencia),\r\n            \"tipovisita\": parseInt(this.state.TipoVisita),\r\n            \"fechahora\": this.state.FechaHora\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/regvisitas', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:5001/api/regvisitas/catalogovisitas\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            visits: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(\"Catalogo Visitas: \");\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            visits: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/regvisitas/catalogope\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    this.setState(\r\n                        {\r\n                            deps: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(\"CatalogoPE: \");\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n\r\n                    this.setState(\r\n                        {\r\n                            deps: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const { visits, isFetched, error } = this.state;\r\n        const { deps } = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Header />\r\n                </Row>\r\n                <br></br> <br></br> <br></br>\r\n                <Row>\r\n                    <Col md={9}>\r\n                        <label> Registra tu visita al recolectron\r\n                        </label>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formMatricula1\">\r\n                                <Form.Label>Matricula UV</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu matricula\" name=\"Matricula\" onChange={this.handleChange} value={this.state.Matricula} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formNames1\">\r\n                                <Form.Label>Nombre (s)</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu(s) nombre(s)\" name=\"Nombre\" onChange={this.handleChange} value={this.state.Nombre} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formAP1\">\r\n                                <Form.Label>Apellido Paterno</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu apellido paterno\" name=\"Apaterno\" onChange={this.handleChange} value={this.state.Apaterno} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formAP1\">\r\n                                <Form.Label>Apellido Materno</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu apellido materno\" name=\"Amaterno\" onChange={this.handleChange} value={this.state.Amaterno} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formSPE1\">\r\n                                    <Form.Label>Selecciona tu Programa Educativo</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange} name=\"PeDependencia\" value={this.state.PeDependencia}>\r\n                                        <option value=''>Seleccione una opción</option>\r\n                                        {\r\n                                            deps.map(e =>\r\n                                                <option key={e.idPeDeps} value={e.idPeDeps}>{e.peDependencia}</option>\r\n\r\n                                            )\r\n\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formVisit1\">\r\n                                    <Form.Label>Motivo de visita</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.handleChange} name=\"TipoVisita\" value={this.state.TipoVisita}>\r\n                                        <option value=''>Seleccione una opción</option>\r\n                                        {\r\n                                            visits.map(e =>\r\n                                                <option key={e.idVisita} value={e.idVisita}>{e.tipoVisita}</option>\r\n\r\n                                            )\r\n\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formDate1\">\r\n                                <Form.Label>Fecha</Form.Label>\r\n                                <Form.Control type=\"date\" onChange={this.handleChange} name=\"FechaHora\" value={this.state.FechaHora} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.AddVisita}>\r\n                                Registrar visita\r\n                             </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Image src=\"https://scontent.fntr5-1.fna.fbcdn.net/v/t31.0-8/23783873_1465675933510648_790669500695388633_o.jpg?_nc_cat=105&ccb=2&_nc_sid=cdbe9c&_nc_eui2=AeG4VZO9H1Y_hkAKZalm2mBqDASs9lEPbZkMBKz2UQ9tmbYBOHp94Pim7-VblIrvT0gpC0EJcIreuYZEGy9Wfnsf&_nc_ohc=XGrntB41JI8AX_X1Kg5&_nc_ht=scontent.fntr5-1.fna&oh=ec207d9809ed1d6e90a2a578937acc2e&oe=6025E10E\" fluid />\r\n                        <br></br><br />\r\n                        <Image src=\"https://scontent.fntr5-1.fna.fbcdn.net/v/t31.0-8/23799887_1465676040177304_1658679170752722236_o.jpg?_nc_cat=107&ccb=2&_nc_sid=cdbe9c&_nc_eui2=AeGYPMtmGHeS-Ftnw1ImHLRPlhGh0-CZxVKWEaHT4JnFUhTC4NNULm8cKY1C4c-y4i-ZW77weROR09UVxZmiKkK2&_nc_ohc=uHZqXAFswksAX_EIar6&_nc_ht=scontent.fntr5-1.fna&oh=fb6b9436501bc016197b8e263ec0e402&oe=6026A9D4\" fluid />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default RegistroVisitas;\r\n\r\n","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroDR.js",["71","72","73","74"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport Carousel from '../components/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass RegistroDR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            origens: [],\r\n            categorias: [],\r\n            residuos: [],\r\n            dr: [],\r\n            aux: [],\r\n            isFetched: false,\r\n            error: null,\r\n            Origen: '',\r\n            Nombre: '',\r\n            CorreoElectronico: '',\r\n            Telefono: '',\r\n            FechaHora: '',\r\n            Categoria: '',\r\n            Residuo: '',\r\n            Cantidad: '',\r\n            PesoxUnidad: '',\r\n            DonRec: [],\r\n            DRTemp: []\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    AddDatos = () => {\r\n        const data = {\r\n            \"origen\": parseInt(this.state.Origen),\r\n            \"nombre\": this.state.Nombre,\r\n            \"telefono\": this.state.Telefono,\r\n            \"correoelectronico\": this.state.CorreoElectronico,\r\n            \"fechahora\": this.state.FechaHora\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/donacionesrec/addperson', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    AddDonRec = () => {\r\n        const data = this.state.DonRec;\r\n\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/donacionesrec/regdonacion', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n                this.setState({\r\n                    Origen: '',\r\n                    Nombre: '',\r\n                    CorreoElectronico: '',\r\n                    Telefono: '',\r\n                    FechaHora: '',\r\n                    Categoria: '',\r\n                    DonRec: [],\r\n                    DRTemp: []\r\n                })\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:5001/api/donacionesrec/origen\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            origens: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            origens: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/donacionesrec/categoriare\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            categorias: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            categorias: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/donacionesrec/residuoselectronicos\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            residuos: result,\r\n                            aux: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            residuos: [],\r\n                            aux: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/donacionesrec\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            dr: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            dr: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n        if (e.target.name === \"Categoria\")\r\n            this.handleSelect(e);\r\n    };\r\n\r\n    handleSelect = (e) => {\r\n\r\n        let idcat = parseInt(e.target.value);\r\n        let arr = [];\r\n        this.state.aux.map(i => {\r\n            if (idcat === i.categoria) {\r\n                arr.push(i);\r\n            }\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                residuos: arr\r\n            }\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n    addElement = () => {\r\n        let donrecs = {\r\n            fkRe: '',\r\n            cantidad: '',\r\n            pesoXUnidad: ''\r\n        }\r\n        let temp = {\r\n            idres: '',\r\n            res: '',\r\n            cant: '',\r\n            pxu: ''\r\n        }\r\n\r\n        this.state.residuos.map(i => {\r\n            if (i.idRe === parseInt(this.state.Residuo)) {\r\n                temp.res = i.descripcion;\r\n            }\r\n        })\r\n\r\n        donrecs.fkRe = parseInt(this.state.Residuo);\r\n        donrecs.cantidad = parseInt(this.state.Cantidad);\r\n        donrecs.pesoXUnidad = parseFloat(this.state.PesoxUnidad);\r\n        temp.idres = donrecs.fkRe;\r\n        temp.cant = donrecs.cantidad;\r\n        temp.pxu = donrecs.pesoXUnidad;\r\n\r\n        this.state.DonRec.push(donrecs);\r\n        this.state.DRTemp.push(temp);\r\n\r\n        this.setState({\r\n            Residuo: '',\r\n            Cantidad: '',\r\n            PesoxUnidad: ''\r\n        });\r\n\r\n        console.log(this.state.DonRec);\r\n        console.log(this.state.DRTemp);\r\n    }\r\n\r\n    eraseElement = () => {\r\n        this.state.DonRec.pop();\r\n        this.state.DRTemp.pop();\r\n\r\n        console.log(this.state.DonRec);\r\n        console.log(this.state.DRTemp);\r\n\r\n        this.setState({\r\n            Residuo: '',\r\n            Cantidad: '',\r\n            PesoxUnidad: ''\r\n        });\r\n    }\r\n    render() {\r\n\r\n        const { origens, isFetched, error, categorias, residuos, DRTemp } = this.state;\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Header />\r\n                </Row>\r\n                <br></br> <br></br> <br></br>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <Carousel />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <label> Registra tu donacion al recolectron\r\n                        </label>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formOrigen1\">\r\n                                <Form.Label>Origen</Form.Label>\r\n                                <Form.Control as=\"select\" name=\"Origen\" onChange={this.handleChange} value={this.state.Origen}>\r\n                                    <option value=''>Selecciona una opción</option>\r\n                                    {\r\n                                        origens.map(e =>\r\n                                            <option key={e.idOrigen} value={e.idOrigen}>{e.origenTipo}</option>\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formFName1\">\r\n                                <Form.Label>Nombre Completo</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu nombre completo\" name=\"Nombre\" onChange={this.handleChange} value={this.state.Nombre} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group controlId=\"formTel1\">\r\n                                    <Form.Label> Telefono </Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Telefono de contacto\" name=\"Telefono\" onChange={this.handleChange} value={this.state.Telefono} />\r\n                                </Form.Group>\r\n                                <br />\r\n                                <Form.Group controlId=\"formEmail1\">\r\n                                    <Form.Label>Correo Electronico</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Ingresa tu email\" name=\"CorreoElectronico\" onChange={this.handleChange} value={this.state.CorreoElectronico} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formDate1\">\r\n                                <Form.Label>Fecha de recepcion</Form.Label>\r\n                                <Form.Control type=\"date\" name=\"FechaHora\" onChange={this.handleChange} value={this.state.FechaHora} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.AddDatos}>\r\n                                Registrar Datos\r\n                             </Button>\r\n                        </Form>\r\n                        <br />\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                    Agregar articulos!</Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formCat1\">\r\n                                                <Form.Label>Categoria</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"Categoria\" onChange={this.handleChange} value={this.state.Categoria}>\r\n                                                    <option value=''>Selecciona una opción</option>\r\n                                                    {\r\n                                                        categorias.map(e =>\r\n                                                            <option key={e.idCRe} value={e.idCRe}>{e.categoria}</option>\r\n                                                        )\r\n                                                    }\r\n                                                </Form.Control>\r\n\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formRE1\">\r\n                                                <Form.Label>Residuo Electronico</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"Residuo\" onChange={this.handleChange} value={this.state.Residuo} >\r\n                                                    <option value=''>Selecciona una opción</option>\r\n                                                    {\r\n                                                        residuos.map(e =>\r\n                                                            <option key={e.idRe} value={e.idRe}>{e.descripcion}</option>\r\n                                                        )\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} controlId=\"formCnt1\">\r\n                                                    <Form.Label>Cantidad</Form.Label>\r\n                                                    <Form.Control type=\"text\" name=\"Cantidad\" onChange={this.handleChange} value={this.state.Cantidad} />\r\n                                                </Form.Group>\r\n                                                <br />\r\n                                                <Form.Group as={Col} controlId=\"formPxU1\">\r\n                                                    <Form.Label>Peso por Unidad (Kg)</Form.Label>\r\n                                                    <Form.Control type=\"text\" name=\"PesoxUnidad\" onChange={this.handleChange} value={this.state.PesoxUnidad} />\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Button variant=\"primary\" type=\"button\" onClick={this.addElement}>Agregar</Button>\r\n                                                <Button variant=\"primary\" type=\"button\" onClick={this.eraseElement}>Borrar</Button>\r\n                                            </Form.Row>\r\n                                        </Form>\r\n                                        <Table striped bordered hover>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Articulo</th>\r\n                                                    <th>Cantidad</th>\r\n                                                    <th>Peso</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    DRTemp.map(i =>\r\n                                                        <tr key={i.idres}>\r\n                                                            <td>{i.res}</td>\r\n                                                            <td>{i.cant}</td>\r\n                                                            <td>{i.pxu}</td>\r\n                                                        </tr>)\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.AddDonRec}> Finalizar Registro</Button>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default RegistroDR;\r\n\r\n","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\LoginReco.js",["75","76"],"import React, { Component } from 'react';\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport Carousel from '../components/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass LoginReco extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            User: {},\r\n            UserName: '',\r\n            Password: '',\r\n            Prev: props.location.state.from.pathname\r\n        }\r\n\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    doLogin() {\r\n        console.log(this.state);\r\n        axios.post('http://localhost:5001/api/usuarios/authenticate',\r\n            {\r\n                \"nombre\": '',\r\n                \"apaterno\": '',\r\n                \"amaterno\": '',\r\n                \"nombreUsuario\": this.state.UserName,\r\n                \"contrasenia\": this.state.Password,\r\n                \"token\": ''\r\n            }).then(\r\n                (response) => {\r\n                    if(response.status === 200){\r\n                        const json = response.data;\r\n                        localStorage.setItem(\"ACCESS_TOKEN\",json.token);\r\n                        console.log(localStorage);\r\n                        this.props.history.push(this.state.Prev);\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(\"Exception \"+ error);\r\n                }\r\n            );\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Header />\r\n                </Row>\r\n                <br></br> <br></br> <br></br>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <label> Acceso\r\n                        </label>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formUN1\">\r\n                                <Form.Label>Nombre de Usuario</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Ingresa tu nombre de usuario\" name=\"UserName\" onChange={this.handleChange} value={this.state.UserName}/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Ingresa tu contraseña\" name=\"Password\" onChange={this.handleChange} value={this.state.Password}/>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicCheckbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.doLogin}>\r\n                                Entrar\r\n                                </Button>\r\n                        </Form>\r\n                        <br />\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Carousel />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default LoginReco;\r\n\r\n","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\RegistroDE.js",["77","78"],"import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport axios from 'axios';\r\nimport Carousel from '../components/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\n\r\nclass RegistroDE extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arts: [],\r\n            deps: [],\r\n            DETemp: [],\r\n            DonEE: [],\r\n            DonEPG: [],\r\n            isFetched: false,\r\n            error: null,\r\n            Matricula: '',\r\n            Nombre: '',\r\n            Apaterno: '',\r\n            Amaterno: '',\r\n            Ped: '',\r\n            FechaHora: '',\r\n            Articulo: '',\r\n            Cantidad: '',\r\n            Destinatario: '',\r\n            Telefono: '',\r\n            Email: '',\r\n            Causa: '',\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    AddDatosE = () => {\r\n        const data = {\r\n            \"matricula\": this.state.Matricula,\r\n            \"nombre\": this.state.Nombre,\r\n            \"apaterno\": this.state.Apaterno,\r\n            \"amaterno\": this.state.Amaterno,\r\n            \"fkDependencia\": parseInt(this.state.Ped),\r\n            \"fechahora\": this.state.FechaHora\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/donacionesemi/addstudent', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    AddDatosPG = () => {\r\n        const data = {\r\n            \"destinatario\": this.state.Destinatario,\r\n            \"telefono\": this.state.Telefono,\r\n            \"correoelectronico\": this.state.Email,\r\n            \"causa\": this.state.Causa,\r\n            \"fechahora\": this.state.FechaHora\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/donacionesemi/addpublic', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    AddDonEmi = () => {\r\n\r\n        if (this.state.Matricula !== '') {\r\n\r\n            const data = this.state.DonEE;\r\n\r\n            console.log(data);\r\n            axios.post('http://localhost:5001/api/donacionesemi/adddonacionest', JSON.stringify(data), {\r\n                headers: {\r\n                    'Accept': 'aplication/json',\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(json => {\r\n                if (json.data.status === 'Success') {\r\n                    alert(\"Data saved!\");\r\n                    this.setState({\r\n                        Matricula: '',\r\n                        Nombre: '',\r\n                        Apaterno: '',\r\n                        Amaterno: '',\r\n                        Ped: '',\r\n                        FechaHora: '',\r\n                        Articulo: '',\r\n                        Cantidad: '',\r\n                        DETemp: [],\r\n                        DonEE: [],\r\n                        DonEPG: []\r\n                    })\r\n\r\n                } else {\r\n                    alert('Data not saved!');\r\n\r\n                }\r\n            })\r\n        }\r\n        if (this.state.Destinatario !== '') {\r\n\r\n            const data = this.state.DonEPG;\r\n\r\n            console.log(data);\r\n            axios.post('http://localhost:5001/api/donacionesemi/adddonacionpg', JSON.stringify(data), {\r\n                headers: {\r\n                    'Accept': 'aplication/json',\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then(json => {\r\n                if (json.data.status === 'Success') {\r\n                    alert(\"Data saved!\");\r\n                    this.setState({\r\n                        FechaHora: '',\r\n                        Articulo: '',\r\n                        Cantidad: '',\r\n                        Destinatario: '',\r\n                        Telefono: '',\r\n                        Email: '',\r\n                        Causa: '',\r\n                        DETemp: [],\r\n                        DonEE: [],\r\n                        DonEPG: []\r\n                    })\r\n\r\n                } else {\r\n                    alert('Data not saved!');\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:5001/api/donacionesemi/articulos\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            arts: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            arts: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n        fetch(\"http://localhost:5001/api/regvisitas/catalogope\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    this.setState(\r\n                        {\r\n                            deps: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n\r\n                    this.setState(\r\n                        {\r\n                            deps: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                    console.log(error);\r\n                }\r\n            )\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    };\r\n\r\n    addElement = () => {\r\n        let temp = {\r\n            idart: '',\r\n            art: '',\r\n            cant: ''\r\n        }\r\n        let donepg = {\r\n            fkArticulo: '',\r\n            cantidad: ''\r\n        }\r\n        let doneme = {\r\n            fkComponente: '',\r\n            cantidad: ''\r\n        }\r\n\r\n        this.state.arts.map(i => {\r\n            if (i.idArticulo === parseInt(this.state.Articulo)) {\r\n                temp.art = i.articulo;\r\n            }\r\n        })\r\n\r\n        temp.idart = parseInt(this.state.Articulo);\r\n        temp.cant = parseInt(this.state.Cantidad);\r\n        donepg.fkArticulo = temp.idart;\r\n        donepg.cantidad = temp.cant;\r\n        doneme.fkComponente = donepg.fkArticulo;\r\n        doneme.cantidad = donepg.cantidad;\r\n\r\n        this.state.DETemp.push(temp);\r\n        this.state.DonEPG.push(donepg);\r\n        this.state.DonEE.push(doneme);\r\n\r\n        this.setState({\r\n            Articulo: '',\r\n            Cantidad: ''\r\n        });\r\n\r\n        console.log(this.state.DETemp);\r\n        console.log(this.state.DonEPG);\r\n        console.log(this.state.DonEE);\r\n    }\r\n\r\n    eraseElement = () => {\r\n        this.state.DETemp.pop();\r\n        this.state.DonEE.pop();\r\n        this.state.DonEPG.pop();\r\n        console.log(this.state.DETemp);\r\n\r\n        this.setState({\r\n            Articulo: '',\r\n            Cantidad: '',\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { deps, arts, DETemp } = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Header />\r\n                </Row>\r\n                <br></br> <br></br> <br></br>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <Image src=\"https://scontent-qro1-1.xx.fbcdn.net/v/t1.0-9/29315054_1578924468852460_3020923508872970240_o.jpg?_nc_cat=107&ccb=2&_nc_sid=730e14&_nc_eui2=AeGPVekIiG_6zko7ibpvFGwwzYlUbgL5Zh_NiVRuAvlmH91SuBzyUzV9hTjK4vF5KTjJkH_TKxcj6MD9YEoqaVas&_nc_ohc=d87QJ6Y6EGwAX9LLSyz&_nc_ht=scontent-qro1-1.xx&oh=b87c09ff9de8b217c3cc0aa70a7c91bf&oe=60266DEE\" fluid />\r\n                        <br></br><br />\r\n                        <Image src=\"https://scontent-qro1-1.xx.fbcdn.net/v/t1.0-9/29386187_1578922088852698_4464907727289712640_o.jpg?_nc_cat=101&ccb=2&_nc_sid=730e14&_nc_eui2=AeGnwRTqkJ9yxpk360A1m_s5kPa1VbQG9OeQ9rVVtAb05wMf1EmDUxjVXEPdDpyHjsF4DLC0mzp_6BadiDDiF5pr&_nc_ohc=7s8te20KXTUAX-fXZLW&_nc_ht=scontent-qro1-1.xx&oh=7a49efda9f4bfec5bbad70354b8fef96&oe=6026C42C\" fluid />\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <label> Registra tu visita al recolectron</label>\r\n                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"profile\" title=\"Estudiantes\">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formMatricula1\">\r\n                                        <Form.Label>Matricula UV</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Ingresa tu matricula\" name=\"Matricula\" onChange={this.handleChange} value={this.state.Matricula} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formNames1\">\r\n                                        <Form.Label>Nombre (s)</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Ingresa tu(s) nombre(s)\" name=\"Nombre\" onChange={this.handleChange} value={this.state.Nombre} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formAP1\">\r\n                                        <Form.Label>Apellido Paterno</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Ingresa tu apellido paterno\" name=\"Apaterno\" onChange={this.handleChange} value={this.state.Apaterno} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formAP1\">\r\n                                        <Form.Label>Apellido Materno</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Ingresa tu apellido materno\" name=\"Amaterno\" onChange={this.handleChange} value={this.state.Amaterno} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} controlId=\"formSPE1\">\r\n                                            <Form.Label>Selecciona tu Programa Educativo</Form.Label>\r\n                                            <Form.Control as=\"select\" name=\"Ped\" onChange={this.handleChange} value={this.state.Ped}>\r\n                                                <option value=''>Seleccione una opción</option>\r\n                                                {\r\n                                                    deps.map(e =>\r\n                                                        <option key={e.idPeDeps} value={e.idPeDeps}>{e.peDependencia}</option>\r\n\r\n                                                    )\r\n\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formDate1\">\r\n                                            <Form.Label>Fecha</Form.Label>\r\n                                            <Form.Control type=\"date\" name=\"FechaHora\" onChange={this.handleChange} value={this.state.FechaHora} />\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button variant=\"primary\" type=\"button\" onClick={this.AddDatosE}>\r\n                                        Registrar datos\r\n                                        </Button>\r\n                                </Form>\r\n                            </Tab>\r\n                            <Tab eventKey=\"contact\" title=\"Publico General\">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formDest\">\r\n                                        <Form.Label>Destinatario</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"Destinatario\" onChange={this.handleChange} value={this.state.Destinatario} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Row>\r\n                                        <Form.Group controlId=\"formTel\">\r\n                                            <Form.Label>Telefono de Contacto</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Telefono\" name=\"Telefono\" onChange={this.handleChange} value={this.state.Telefono} />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formEmail\">\r\n                                            <Form.Label>Correo electronico</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder=\"Email\" name=\"Email\" onChange={this.handleChange} value={this.state.Email} />\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Group controlId=\"formCausa\">\r\n                                        <Form.Label>Causa</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"Causa\" onChange={this.handleChange} value={this.state.Causa} />\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formAP1\">\r\n                                        <Form.Label>Fecha</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"FechaHora\" onChange={this.handleChange} value={this.state.FechaHora} />\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"button\" onClick={this.AddDatosPG}>\r\n                                        Registrar datos\r\n                                     </Button>\r\n                                </Form>\r\n                            </Tab>\r\n                        </Tabs>\r\n                        <br />\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                    Agregar articulos!</Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Row>\r\n                                                <Form.Group controlId=\"formCat1\">\r\n\r\n                                                    <Form.Label>Articulo</Form.Label>\r\n                                                    <Form.Control as=\"select\" name=\"Articulo\" onChange={this.handleChange} value={this.state.Articulo}>\r\n                                                        <option value=''>Selecciona una opción</option>\r\n                                                        {\r\n                                                            arts.map(e =>\r\n                                                                <option key={e.idArticulo} value={e.idArticulo}>{e.articulo}</option>\r\n\r\n                                                            )\r\n\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <Form.Group controlId=\"formCnt1\">\r\n                                                    <Form.Label>Cantidad</Form.Label>\r\n                                                    <Form.Control type=\"text\" name=\"Cantidad\" onChange={this.handleChange} value={this.state.Cantidad}></Form.Control>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                            <br />\r\n                                            <Form.Row>\r\n                                                <Button variant=\"primary\" type=\"button\" onClick={this.addElement}> Agregar</Button>\r\n                                                <Button variant=\"primary\" type=\"button\" onClick={this.eraseElement}>Borrar</Button>\r\n                                            </Form.Row>\r\n                                        </Form>\r\n                                        <Table striped bordered hover>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Articulo</th>\r\n                                                    <th>Cantidad</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    DETemp.map(i =>\r\n                                                        <tr key={i.idart}>\r\n                                                            <td>{i.art}</td>\r\n                                                            <td>{i.cant}</td>\r\n\r\n                                                        </tr>)\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.AddDonEmi}> Finalizar Registro</Button>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default RegistroDE;\r\n\r\n","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Eventos.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\InicioReco.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\components\\Carousel.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Inventario.js",["79","80","81"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory, Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Inventario extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elements: [],\r\n            categorias: [],\r\n            residuos: [],\r\n            estados: [],\r\n            isFetched: false,\r\n            error: null,\r\n            Categoria: '',\r\n            Residuo: '',\r\n            Cantidad: '',\r\n            PesoxUnidad: '',\r\n            Estado: '',\r\n            Notas: '',\r\n            NomRe: '',\r\n            Costo: ''\r\n        }\r\n    }\r\n\r\n    AddArticulo = () => {\r\n        const data = {\r\n            \"articulo\": parseInt(this.state.Residuo),\r\n            \"cantidad\": parseInt(this.state.Cantidad),\r\n            \"pesoXUnidad\": parseFloat(this.state.PesoxUnidad),\r\n            \"fkiEstado\": parseInt(this.state.Estado),\r\n            \"notas\": this.state.Notas\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/inventarioadm/addarticulo', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n                this.setState({\r\n                    Categoria: '',\r\n                    Residuo: '',\r\n                    Cantidad: '',\r\n                    PesoxUnidad: '',\r\n                    Estado: '',\r\n                    Notas: ''\r\n                })\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    AddResiduo = () => {\r\n        const data = {\r\n            \"descripcion\": this.state.NomRe,\r\n            \"categoria\": parseInt(this.state.Categoria),\r\n            \"costoPromedioXUnidad\": parseInt(this.state.Costo)\r\n        }\r\n        console.log(data);\r\n        axios.post('http://localhost:5001/api/inventarioadm/addresiduo', JSON.stringify(data), {\r\n            headers: {\r\n                'Accept': 'aplication/json',\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(json => {\r\n            if (json.data.status === 'Success') {\r\n                alert(\"Data saved!\");\r\n\r\n                this.setState({\r\n                    Categoria: '',\r\n                    NomRe: '',\r\n                    Costo: ''\r\n                })\r\n\r\n            } else {\r\n                alert('Data not saved!');\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteElement(id) {\r\n        axios.delete(\"http://localhost:5001/api/inventarioadm/delarticulo/\" + id)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.status === \"Success\") {\r\n                        alert(\"Registro eliminado!\");\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:5001/api/inventarioadm\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            elements: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            elements: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/inventarioadm/estados\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            estados: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            estados: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/donacionesrec/categoriare\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            categorias: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            categorias: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n\r\n        fetch(\"http://localhost:5001/api/donacionesrec/residuoselectronicos\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState(\r\n                        {\r\n                            residuos: result,\r\n                            aux: result,\r\n                            isFetched: true,\r\n                            error: null\r\n                        }\r\n\r\n                    );\r\n                    console.log(this.state);\r\n                },\r\n                (error) => {\r\n                    this.setState(\r\n                        {\r\n                            residuos: [],\r\n                            aux: [],\r\n                            isFetched: true,\r\n                            error: error\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n    }\r\n\r\n  \r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n        if (e.target.name === \"Categoria\")\r\n            this.handleSelect(e);\r\n    };\r\n\r\n    handleSelect = (e) => {\r\n\r\n        let idcat = parseInt(e.target.value);\r\n        let arr = [];\r\n        this.state.aux.map(i => {\r\n            if (idcat === i.categoria) {\r\n                arr.push(i);\r\n            }\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                residuos: arr\r\n            }\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { elements, categorias, residuos, estados } = this.state;\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Header />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col md={1}></Col>\r\n                    <Col md={10}>\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Articulo</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Estado</th>\r\n                                    <th>Notas</th>\r\n                                    <th colSpan=\"2\">Acciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    elements.map(e =>\r\n                                        <tr key={e.idArticulo}>\r\n                                            <td>{e.idArticulo}</td>\r\n                                            <td>{e.articulo}</td>\r\n                                            <td>{e.cantidad}</td>\r\n                                            <td>{e.estado}</td>\r\n                                            <td>{e.notas}</td>\r\n                                            <td><Link to={\"/edit/\" + e.idArticulo} className=\"btn btn-success\">Editar</Link></td>\r\n                                            <td><button type=\"button\" onClick={() => this.deleteElement(e.idArticulo)} className=\"btn btn-danger\">Eliminar</button></td>\r\n                                        </tr>)\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                    Registrar nuevo articulo</Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group controlId=\"formCat1\">\r\n                                                <Form.Label>Categoria</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"Categoria\" onChange={this.handleChange} value={this.state.Categoria}>\r\n                                                    <option value=''>Selecciona una opción</option>\r\n                                                    {\r\n                                                        categorias.map(e =>\r\n                                                            <option key={e.idCRe} value={e.idCRe}>{e.categoria}</option>\r\n                                                        )\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formRE1\">\r\n                                                <Form.Label>Residuo Electronico</Form.Label>\r\n                                                <Form.Control as=\"select\" name=\"Residuo\" onChange={this.handleChange} value={this.state.Residuo} >\r\n                                                    <option value=''>Selecciona una opción</option>\r\n                                                    {\r\n                                                        residuos.map(e =>\r\n                                                            <option key={e.idRe} value={e.idRe}>{e.descripcion}</option>\r\n                                                        )\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} controlId=\"formCnt1\">\r\n                                                    <Form.Label>Cantidad</Form.Label>\r\n                                                    <Form.Control type=\"text\" name=\"Cantidad\" onChange={this.handleChange} value={this.state.Cantidad}></Form.Control>\r\n                                                </Form.Group>\r\n                                                <br />\r\n                                                <Form.Group as={Col} controlId=\"formPxU1\">\r\n                                                    <Form.Label>Peso x Unidad</Form.Label>\r\n                                                    <Form.Control type=\"text\" name=\"PesoxUnidad\" onChange={this.handleChange} value={this.state.PesoxUnidad}></Form.Control>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n\r\n                                            <Form.Label>Estado</Form.Label>\r\n                                            <Form.Control as=\"select\" name=\"Estado\" onChange={this.handleChange} value={this.state.Estado} >\r\n                                                <option value=''>Selecciona una opción</option>\r\n                                                {\r\n                                                    estados.map(e =>\r\n                                                        <option key={e.idEstados} value={e.idEstados}>{e.estado}</option>\r\n                                                    )\r\n                                                }\r\n                                            </Form.Control>\r\n                                            <br />\r\n                                            <Form.Label>Notas</Form.Label>\r\n                                            <Form.Control as=\"textarea\" rows={3} name=\"Notas\" onChange={this.handleChange} value={this.state.Notas}>\r\n\r\n                                            </Form.Control>\r\n                                            <br />\r\n\r\n                                            <Button variant=\"primary\" type=\"button\" onClick={this.AddArticulo}>Registrar Articulo</Button>\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                    Nuevo Residuo Electronico</Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                    <Card.Body>\r\n                                        <Form>\r\n                                            <Form.Group as={Col} controlId=\"formCnt1\">\r\n                                                <Form.Label>Nombre residuo electronico</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"NomRe\" onChange={this.handleChange} value={this.state.NomRe}></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Row>\r\n                                                <Form.Group controlId=\"formCat1\">\r\n                                                    <Form.Label>Categoria</Form.Label>\r\n                                                    <Form.Control as=\"select\" name=\"Categoria\" onChange={this.handleChange} value={this.state.Categoria}>\r\n                                                        <option value=''>Selecciona una opción</option>\r\n                                                        {\r\n                                                            categorias.map(e =>\r\n                                                                <option key={e.idCRe} value={e.idCRe}>{e.categoria}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                                <br />\r\n                                                <Form.Group controlId=\"formPxU1\">\r\n                                                    <Form.Label>Costo</Form.Label>\r\n                                                    <Form.Control type=\"text\" placeholder=\"costo promedio x unidad\" name=\"Costo\" onChange={this.handleChange} value={this.state.Costo}></Form.Control>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                            <Button variant=\"primary\" type=\"button\" onClick={this.AddResiduo}> Registrar Residuo </Button>\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Col>\r\n                    <Col md={1}></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default Inventario;\r\n\r\n","C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\Actividades.js",[],"C:\\Users\\Alvaro\\Documents\\GitHub\\SISRECOUV_WebII\\cliente_reco_uv\\src\\pages\\editInventario.js",["82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":8,"column":44,"nodeType":"92","messageId":"93","endLine":8,"endColumn":45},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":126,"column":25,"nodeType":"96","messageId":"97","endLine":126,"endColumn":34},{"ruleId":"94","severity":1,"message":"99","line":126,"column":36,"nodeType":"96","messageId":"97","endLine":126,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":221,"column":30,"nodeType":"102","messageId":"103","endLine":221,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":250,"column":35,"nodeType":"102","messageId":"103","endLine":250,"endColumn":37},{"ruleId":"94","severity":1,"message":"98","line":291,"column":26,"nodeType":"96","messageId":"97","endLine":291,"endColumn":35},{"ruleId":"94","severity":1,"message":"99","line":291,"column":37,"nodeType":"96","messageId":"97","endLine":291,"endColumn":42},{"ruleId":"94","severity":1,"message":"104","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"105","line":2,"column":19,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":252,"column":31,"nodeType":"102","messageId":"103","endLine":252,"endColumn":33},{"ruleId":"94","severity":1,"message":"104","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":18},{"ruleId":"94","severity":1,"message":"105","line":3,"column":20,"nodeType":"96","messageId":"97","endLine":3,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":230,"column":30,"nodeType":"102","messageId":"103","endLine":230,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"106","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":13},{"ruleId":"94","severity":1,"message":"107","line":191,"column":17,"nodeType":"96","messageId":"97","endLine":191,"endColumn":25},{"ruleId":"94","severity":1,"message":"108","line":191,"column":27,"nodeType":"96","messageId":"97","endLine":191,"endColumn":37},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'isFetched' is assigned a value but never used.","'error' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'Image' is defined but never used.","'elements' is assigned a value but never used.","'categorias' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]